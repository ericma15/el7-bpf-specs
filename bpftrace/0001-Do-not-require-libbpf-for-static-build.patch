From bbef8fe662571abed5d538e6ba819d345de10978 Mon Sep 17 00:00:00 2001
From: bas smit <bas@baslab.org>
Date: Sat, 1 May 2021 13:04:44 +0200
Subject: [PATCH] Do not require libbpf for static build

---
 CMakeLists.txt         |  2 +-
 cmake/FindLibBcc.cmake | 56 +++++++++++++++++++++---------------------
 src/CMakeLists.txt     |  1 -
 3 files changed, 29 insertions(+), 30 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index a2f7c6b..64704e6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -111,7 +111,7 @@ if(POLICY CMP0075)
   cmake_policy(SET CMP0075 NEW)
 endif()
 if(STATIC_LINKING)
-  set(CMAKE_REQUIRED_LIBRARIES bcc bcc_bpf bpf elf z)
+  set(CMAKE_REQUIRED_LIBRARIES bcc bcc_bpf elf z)
 else()
   set(CMAKE_REQUIRED_LIBRARIES ${LIBBCC_LIBRARIES})
   if (LIBBPF_FOUND)
diff --git a/cmake/FindLibBcc.cmake b/cmake/FindLibBcc.cmake
index 61d1f5e..79326c5 100644
--- a/cmake/FindLibBcc.cmake
+++ b/cmake/FindLibBcc.cmake
@@ -78,36 +78,36 @@ FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibBcc "Please install the bcc library package
 
 # Check bpf_attach_kprobe signature
 if(${LIBBCC_FOUND})
-if(STATIC_LINKING)
-  # libbcc.a is not statically linked with libbpf.a, libelf.a, and libz.a.
-  # If we do a static bpftrace build, we must link them in.
-  find_package(LibBpf)
-  find_package(LibElf)
-  find_package(LibZ)
-  SET(CMAKE_REQUIRED_LIBRARIES ${LIBBCC_BPF_LIBRARY_STATIC} ${LIBBPF_LIBRARIES} ${LIBELF_LIBRARIES} ${LIBZ_LIBRARIES})
-else()
-  SET(CMAKE_REQUIRED_LIBRARIES ${LIBBCC_LIBRARIES} ${LIBBPF_LIBRARIES})
-endif()
+  if(STATIC_LINKING)
+    # libbcc.a is not statically linked with libbpf.a, libelf.a, and libz.a.
+    # If we do a static bpftrace build, we must link them in.
+    find_package(LibBpf)
+    find_package(LibElf)
+    find_package(LibZ)
+    SET(CMAKE_REQUIRED_LIBRARIES ${LIBBCC_BPF_LIBRARY_STATIC} ${LIBELF_LIBRARIES} ${LIBZ_LIBRARIES})
+  else()
+    SET(CMAKE_REQUIRED_LIBRARIES ${LIBBCC_LIBRARIES} )
+  endif()
 
-INCLUDE(CheckCXXSourceCompiles)
-SET(CMAKE_REQUIRED_INCLUDES ${LIBBCC_INCLUDE_DIRS})
-CHECK_CXX_SOURCE_COMPILES("
-#include <bcc/libbpf.h>
+  INCLUDE(CheckCXXSourceCompiles)
+  SET(CMAKE_REQUIRED_INCLUDES ${LIBBCC_INCLUDE_DIRS})
+  CHECK_CXX_SOURCE_COMPILES("
+  #include <bcc/libbpf.h>
 
-int main(void) {
-  bpf_attach_kprobe(0, BPF_PROBE_ENTRY, \"\", \"\", 0, 0);
-  return 0;
-}
-" LIBBCC_ATTACH_KPROBE_SIX_ARGS_SIGNATURE)
+  int main(void) {
+    bpf_attach_kprobe(0, BPF_PROBE_ENTRY, \"\", \"\", 0, 0);
+    return 0;
+  }
+  " LIBBCC_ATTACH_KPROBE_SIX_ARGS_SIGNATURE)
 
-CHECK_CXX_SOURCE_COMPILES("
-#include <bcc/libbpf.h>
+  CHECK_CXX_SOURCE_COMPILES("
+  #include <bcc/libbpf.h>
 
-int main(void) {
-  bpf_attach_uprobe(0, BPF_PROBE_ENTRY, \"\", \"\", 0, 0, 0);
-  return 0;
-}
-" LIBBCC_ATTACH_UPROBE_SEVEN_ARGS_SIGNATURE)
-SET(CMAKE_REQUIRED_LIBRARIES)
-SET(CMAKE_REQUIRED_INCLUDES)
+  int main(void) {
+    bpf_attach_uprobe(0, BPF_PROBE_ENTRY, \"\", \"\", 0, 0, 0);
+    return 0;
+  }
+  " LIBBCC_ATTACH_UPROBE_SEVEN_ARGS_SIGNATURE)
+  SET(CMAKE_REQUIRED_LIBRARIES)
+  SET(CMAKE_REQUIRED_INCLUDES)
 endif()
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index f491a54..38dcdb8 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -150,7 +150,6 @@ target_link_libraries(libbpftrace ${LIBBCC_LIBRARIES})
 if(STATIC_LINKING)
   # These are not part of the static libbcc so have to be added separate
   target_link_libraries(libbpftrace ${LIBBCC_BPF_LIBRARY_STATIC})
-  target_link_libraries(libbpftrace ${LIBBPF_LIBRARIES})
   target_link_libraries(libbpftrace ${LIBBCC_LOADER_LIBRARY_STATIC})
 
   add_library(LIBELF STATIC IMPORTED)
-- 
2.24.3 (Apple Git-128)

